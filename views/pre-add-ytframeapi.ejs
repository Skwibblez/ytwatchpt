<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <html lang="en-US">
    <link rel="stylesheet" href="styles.css">
    <title>Amane a best</title>
  </head>
  <body>
    <ul id="messages"></ul>
    <p id="userCnt"> Connected users </p>
    <div class = "flex-container">
        <div>
          <iframe title="YouTube video player" id ="ytvid" class="youtube-player" type="text/html" width="720" height="480"
           src="https://www.youtube.com/embed/M68OwnWhEqY?autoplay=1&loop=1"
          frameborder="0" allow="autoplay"allowFullScreen></iframe>
          <br><input id = "vidDisplay" type = "button" value="Hide >///<" onclick="videoDisplay()"/>

          <form action="">
            <tr>
              <td>YouTube Link: </td>
              <td><input id="v" autocomplete="off" /><button>Video</button></td>
            </tr>
          </form>
        </div>
        <div>
          <table id="myTableData"  border="1" cellpadding="2">
            <tr>
                <td id="row_col">&nbsp;</td>
                <td id="song_col"><b>Song</b></td>
                <td id="link_col"><b>Link</b></td>
                <td id="int_col"><b>Int</b></td>
                <td id="play_col"><b>Play </b></td>
                <td id="del_col"><b>Delete Song</b></td>
            </tr>
            <% for(var i = 0; i < songs.length; i++) {%>
                <tr>
                    <td><%=songs[i].row_num%></td>
                    <td id="song_col"><%=songs[i].song_name%></td>
                    <td><%=songs[i].link%> </td>
                    <td>1</td>
                    <td><input type="button" value = "Play" onClick="Javacsript:playRow(this)"></td>
                    <td><input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)"></td>
                </tr>
            <% } %>
          </table>

        </div>
    </div>

<!--=============================== JavaScript below=======================================----->

    <script src = "/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <!-- the magic is HERE -->
    <script>

    ////////  START ///////////////
      // var tag = document.createElement('script');
      // tag.src = "https://www.youtube.com/iframe_api";
      // var firstScriptTag = document.getElementsByTagName('script')[0];
      // firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      //
      // var player;
      // function onYouTubeIframeAPIReady() {
      //   player = new YT.Player('player', {
      //     height: '480',
      //     width: '720',
      //     videoId: 'XPkNhfWju28',
      //     events: {
      //       'onReady': onPlayerReady,
      //       'onStateChange': onPlayerStateChange
      //     },
      //     playerVars:{
      //       'origin':'localhost:1111'
      //     }
      //   });
      // }
      // function onPlayerReady(event) {
      //   event.target.playVideo();
      // }
      // var done = false;
      // function onPlayerStateChange(event) {
      //   if(player.getPlayerState() == 0){
      //     console.log("player stopped")
      //     alert("Player stopped");
      //     test();
      //   }else if(player.getPlayerState() == 1){
      //     console.log("playing")
      //   }else if(player.getPlayerState() == 2){
      //     console.log("paused")
      //   }
      // }
      // function pauseVideo(){
      //   player.pauseVideo();   //Need to emit to server to do on all clients
      //
      // }
      // function playVideo(){
      //   player.playVideo();   //Need to emit to server to do on all clients
      // }
      //
      // function test(){  //Attempt to change videos on everyone
      //   var x = "0VvMKJ4IuWM"
      //   player.loadVideoById(x);
      //   console.log("Test is working")
      // }
      ////////END ///////////////
      var table = document.getElementById("myTableData");
      var rowNum = myTableData.rows[table.rows.length-1].cells[0].innerHTML; //Get row_num of last column
      rowNum++;
      console.log(rowNum);

      if(rowNum == "&nbsp;"){
        rowNum = 1;
      }else if(isNaN(rowNum)){
        console.log("NUMBER IS NAN aka error")
        rowNum = 1;
      }

      console.log("Table data: " + myTableData.rows[table.rows.length-1].cells[0].innerHTML)
      console.log("Row num: " + rowNum)
      var socket = io();
      $(function () {
        //Main search function
        $('form').submit(function(e){
          e.preventDefault(); // prevents page reloading
          if($('#v').val() !== ''){   //If valid input
            //socket.emit('video link', $('#v').val());   //Sends object to server
            //String parser here -- should use YT API later
            var n = $('#v').val().indexOf("=");
            var length = $('#v').val().length;
            if(n !== -1){   //Checking for specific ID
              var vid_id = $('#v').val().substring(n+1, length)
              var requestLink = gapi.client.youtube.videos.list({
                part:"snippet",
                id: vid_id
              });
              requestLink.execute(function(response){
                var results = response.result;
                var client_url = $('#v').val().substring(n+1, length);
                var song_name = results.items[0].snippet.title;
                var message_detail_link = [rowNum, song_name, client_url];
                socket.emit('db vid link', message_detail_link);  //Send data to server
                rowNum++;
                console.log("In request song name(title): " + song_name)
                console.log("Client_string" + client_url)
                $('#v').val('');  //Reset textfield
              });
            }else{
              //Can search any string and use 1st video based on relevance
              var request = gapi.client.youtube.search.list({
                part:"snippet",
                type:"video",
                q: $("#v").val(),
                maxResults: 1,
                order: "relevance"
              });
              request.execute(function(response){
                var results = response.result;
                $.each(results.items, function(index,item){
                  var client_url = item.id.videoId
                  var song_name = results.items[0].snippet.title;
                  var message_detail_searched = [rowNum,song_name, client_url];
                  socket.emit('db vid link', message_detail_searched);  //Send data to server
                  rowNum++;
                  console.log("ID: " + item.id.videoId);
                  console.log("In request song name(title): " + song_name)
                  console.log("Client_url" + client_url)
                  $('#v').val('');
                });
              });//execute
              //End api addition
            }
            console.log("Length: " + length);
            //console.log("New string: " + $('#v').val().substring(n+1, length));
            console.log("Index: " + n);
          }else{
            alert("Empty search");
          }//else

          // socket.emit('chat message', $('#m').val());
          // $('#v').val('');  //Resets the textfield
          return false;
        }); //form function

        //ADD CLIENT SOCKETS HERE
        socket.on('video link', (video) => {
          console.log(video[1]); //Just pass the object to view it
          //document.getElementById("ytvid").src = "https://www.youtube.com/embed/" + video + "?autoplay=1&loop=1";   //Rep. vid with input
          var link = "https://www.youtube.com/embed/" + video[2];
          var table = document.getElementById("myTableData");   //Append to table

          if(link.length > 60){
            alert("Foh nga");
            return; //use this in real code -- leave along for testing purposes
          }

          var song =  video[1];
          var integrity = 0;
          //Buttons
          var playAll = '<input type="button" value = "Play" onClick="Javacsript:playRow(this)">';  //Change to button
          var deleteButton = '<input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)">';

          //Insert data into row into table
          var rowCount = table.rows.length;
          var row = table.insertRow(rowCount);
          let tableHeader2 = [video[0], song, link,integrity, playAll, deleteButton]

          console.log("Total rows: " + rowCount);
          for(var i = 0; i < tableHeader2.length; i++){
              row.insertCell(i).innerHTML = tableHeader2[i];
          }
          rowNum = myTableData.rows[table.rows.length-1].cells[0].innerHTML;
          rowNum++;
          console.log("Adding New row num: " + rowNum)
          if(isNaN(rowNum)){
            rowNum = 1;
            console.log("Adjusting adding row num: " + rowNum)
          }
          document.getElementById("v").value = "";  //Reset textfield value
          document.getElementById("v").focus();
        });

        //Need to do something to delete row -- need to know how to pass around correct index/object to delete
        socket.on('delete row', function(row){
          // var index = row.parentNode.parentNode.rowIndex;   //Pass index for deletion
          var table = document.getElementById("myTableData");
          table.deleteRow(row);
          rowNum = myTableData.rows[table.rows.length-1].cells[0].innerHTML;
          rowNum++;
          console.log("Deleting row: " + row);
          console.log("New row num: " + rowNum)
          if(isNaN(rowNum)){
            rowNum = 1;
            console.log("Adjusting row num: " + rowNum)
          }
          console.log("Deleting row: " + row);
        });

        socket.on('play row', function(row){
          var table = document.getElementById("myTableData");
          var x = document.getElementById("myTableData").rows[row].cells;
          var newLink = x[2].innerHTML;     //Invisible space added at end for some reason
          console.log("start"+newLink+"end")
          console.log("Length: " + newLink.length)
          if(newLink != ""){
            //Bad fix -- links from db have extra char but newly added songs dont
            if(x[3].innerHTML == 0){
                var inputVideo = newLink + "?autoplay=1";
                console.log("0 detected")
            }else{
              var inputVideo = newLink.substring(0,newLink.length-1) + "?autoplay=1";
              console.log("1 not detected");
            }

            console.log("InputVid: " + inputVideo);
            //Try to change player div
            //player.loadVideoById('JcnCYQYl0Eo');
            // player.loadVideoByUrl(inputVideo);
            document.getElementById("ytvid").src = inputVideo;    //Replace video
            console.log("Successfully inputted!");
          }else{
            console.log("Link is empty");
          }
        });

        socket.on('hide video', function(){
          var x = document.getElementById("ytvid");
          if (x.style.display === "none") {
            x.style.display = "block";
            document.getElementById("vidDisplay").value = "Hide >///<";
          } else {
            x.style.display = "none";
            document.getElementById("vidDisplay").value = "Show oWo";
          }
          //Works for both videos
          var z = document.getElementById("player");
          if (z.style.display === "none") {
            z.style.display = "block";
            document.getElementById("vidDisplay").value = "Hide >///<";
          } else {
            z.style.display = "none";
            document.getElementById("vidDisplay").value = "Show oWo";
          }
        });

        socket.on('count users', function(numUsers){
          console.log('User connected' + numUsers);
          document.getElementById("userCnt").innerHTML = "Connected Users: " + numUsers;
          //alert(numUsers);
        });

        socket.on('output title', function(newTitle){
          console.log("Client side title: " + newTitle);
        });
      }); //end of $function

      //Try to modularize the files by adding main.js but currently page refreshes upon finding main.js
      function deleteRow(obj) {
          //Test how sockets work
          var index = obj.parentNode.parentNode.rowIndex;
          var index_row_num = myTableData.rows[index].cells[0].innerHTML; //Get row_num of last column
          var deletion_arr = [index, index_row_num]
          console.log("Delete target row num: " + myTableData.rows[index].cells[0].innerHTML)
          socket.emit('delete row', deletion_arr);
          //socket.emit('delete row', $('#v').val()); //I am able to do this <---
      }

      function playRow(obj){
        var index = obj.parentNode.parentNode.rowIndex;
        socket.emit('play row', index);
      }

      function videoDisplay(){
        socket.emit('hide video');
      }
      //Attempt to add YTAPI
      function init(){
        gapi.client.setApiKey("AIzaSyAok0QgaPlQstcwKOKEOw641a3aRJZ4qmw");
        console.log("init connected");
        gapi.client.load("youtube", "v3", function(){
          // yt api rdy
        });
      }

      //TO DOOOOOOO
      //Need to add enhanced search function -- may need to use YTAPI -- done
      //Need to add seeking as well as play/pause on video -- next?
      //not easy.. need to make own video player
      //Can probably change how video submission works -- done
      //-- call function that emits to socket and pass the link -- done
      //Need to add chat functionality? --skip prolly
      //Need to add login? --skip prolly
      //Site: https://noob-chat-test.herokuapp.com/
      //Will rename later

      //REFER  to other ytproject for mongodb connection (problem was ip listing...fokme)
      //50% progress now??
    </script>
  <script src="https://apis.google.com/js/client.js?onload=init"></script>

  </body>
</html>
